@model List<VentaEN.Venta>

@{
    ViewBag.Title = "Create";
    Layout = "~/Views/Shared/_Layout.cshtml";
}

<h2>Create</h2>


@using (Html.BeginForm())
{
    @Html.AntiForgeryToken()
    <h4>Venta</h4>
    <hr />
    <div class="row">
        <div class="form-group">
            <label class="control-label col-md-2">Seleccionar cliente</label>
            <div class="col-md-10">
                @Html.DropDownList("IdCliente", null, htmlAttributes: new { @class = "form-control" })
                @Html.ValidationMessageFor(model => model[0].IdCliente, "", new { @class = "text-danger" })
            </div>
        </div>
        <br /><br />
        <div class="col-md-12 col-lg-6">
            <div class="form-horizontal">
                <h3>Producto 1</h3>
                @Html.ValidationSummary(true, "", new { @class = "text-danger" })
                <div class="form-group">
                    @Html.LabelFor(model => model[0].Producto, htmlAttributes: new { @class = "control-label col-md-2" })
                    <div class="col-md-10">
                        @Html.EditorFor(model => model[0].Producto, new { htmlAttributes = new { @class = "form-control" } })
                        @Html.ValidationMessageFor(model => model[0].Producto, "", new { @class = "text-danger" })
                    </div>
                </div>

                <div class="form-group">
                    @Html.LabelFor(model => model[0].Descripcion, htmlAttributes: new { @class = "control-label col-md-2" })
                    <div class="col-md-10">
                        @Html.EditorFor(model => model[0].Descripcion, new { htmlAttributes = new { @class = "form-control" } })
                        @Html.ValidationMessageFor(model => model[0].Descripcion, "", new { @class = "text-danger" })
                    </div>
                </div>

                <div class="form-group">
                    @Html.LabelFor(model => model[0].Precio, htmlAttributes: new { @class = "control-label col-md-2" })
                    <div class="col-md-10">
                        <input type="text" name="Precios[0]" class=" form-control" />
                        @*@Html.EditorFor(model => model.Precio, new { htmlAttributes = new { @class = "form-control" } })*@
                        @Html.ValidationMessageFor(model => model[0].Precio, "", new { @class = "text-danger" })
                    </div>
                </div>

                <div class="form-group">
                    @Html.LabelFor(model => model[0].Cantidad, htmlAttributes: new { @class = "control-label col-md-2" })
                    <div class="col-md-10">
                        @Html.EditorFor(model => model[0].Cantidad, new { htmlAttributes = new { @class = "form-control" } })
                        @Html.ValidationMessageFor(model => model[0].Cantidad, "", new { @class = "text-danger" })
                    </div>
                </div>
            </div>
        </div>
        <div class="col-md-12 col-lg-6">
            <div class="form-horizontal">
                <div class="divider"></div>
                <h3>Producto 2</h3>
                @Html.ValidationSummary(true, "", new { @class = "text-danger" })
                <div class="form-group">
                    @Html.LabelFor(model => model[1].Producto, htmlAttributes: new { @class = "control-label col-md-2" })
                    <div class="col-md-10">
                        @Html.EditorFor(model => model[1].Producto, new { htmlAttributes = new { @class = "form-control" } })
                        @Html.ValidationMessageFor(model => model[1].Producto, "", new { @class = "text-danger" })
                    </div>
                </div>

                <div class="form-group">
                    @Html.LabelFor(model => model[1].Descripcion, htmlAttributes: new { @class = "control-label col-md-2" })
                    <div class="col-md-10">
                        @Html.EditorFor(model => model[1].Descripcion, new { htmlAttributes = new { @class = "form-control" } })
                        @Html.ValidationMessageFor(model => model[1].Descripcion, "", new { @class = "text-danger" })
                    </div>
                </div>

                <div class="form-group">
                    @Html.LabelFor(model => model[1].Precio, htmlAttributes: new { @class = "control-label col-md-2" })
                    <div class="col-md-10">
                        <input type="text" name="Precios[1]" class=" form-control" />
                        @*@Html.EditorFor(model => model.Precio, new { htmlAttributes = new { @class = "form-control" } })*@
                        @Html.ValidationMessageFor(model => model[1].Precio, "", new { @class = "text-danger" })
                    </div>
                </div>

                <div class="form-group">
                    @Html.LabelFor(model => model[1].Cantidad, htmlAttributes: new { @class = "control-label col-md-2" })
                    <div class="col-md-10">
                        @Html.EditorFor(model => model[1].Cantidad, new { htmlAttributes = new { @class = "form-control" } })
                        @Html.ValidationMessageFor(model => model[1].Cantidad, "", new { @class = "text-danger" })
                    </div>
                </div>
            </div>
        </div>
        <div class="col-md-12 col-lg-6">
            <div class="form-horizontal">
                <hr />
                <h3>Producto 3</h3>
                @Html.ValidationSummary(true, "", new { @class = "text-danger" })
                <div class="form-group">
                    @Html.LabelFor(model => model[2].Producto, htmlAttributes: new { @class = "control-label col-md-2" })
                    <div class="col-md-10">
                        @Html.EditorFor(model => model[2].Producto, new { htmlAttributes = new { @class = "form-control" } })
                        @Html.ValidationMessageFor(model => model[2].Producto, "", new { @class = "text-danger" })
                    </div>
                </div>

                <div class="form-group">
                    @Html.LabelFor(model => model[2].Descripcion, htmlAttributes: new { @class = "control-label col-md-2" })
                    <div class="col-md-10">
                        @Html.EditorFor(model => model[2].Descripcion, new { htmlAttributes = new { @class = "form-control" } })
                        @Html.ValidationMessageFor(model => model[2].Descripcion, "", new { @class = "text-danger" })
                    </div>
                </div>

                <div class="form-group">
                    @Html.LabelFor(model => model[2].Precio, htmlAttributes: new { @class = "control-label col-md-2" })
                    <div class="col-md-10">
                        <input type="text" name="Precios[2]" class=" form-control" />
                        @*@Html.EditorFor(model => model.Precio, new { htmlAttributes = new { @class = "form-control" } })*@
                        @Html.ValidationMessageFor(model => model[2].Precio, "", new { @class = "text-danger" })
                    </div>
                </div>

                <div class="form-group">
                    @Html.LabelFor(model => model[2].Cantidad, htmlAttributes: new { @class = "control-label col-md-2" })
                    <div class="col-md-10">
                        @Html.EditorFor(model => model[2].Cantidad, new { htmlAttributes = new { @class = "form-control" } })
                        @Html.ValidationMessageFor(model => model[2].Cantidad, "", new { @class = "text-danger" })
                    </div>
                </div>
            </div>
        </div>
    </div>

    <div class="form-group">
        <div class="col-md-offset-2 col-md-10">
            <input type="submit" value="Create" class="btn btn-default" />
        </div>
    </div>
}

<div>
    @Html.ActionLink("Back to List", "Index")
</div>

@section Scripts {
    @Scripts.Render("~/bundles/jqueryval")
}
